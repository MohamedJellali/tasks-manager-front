{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mohamed/Desktop/to-do-app-front/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport TaskApiService from \"../services/taskApiService\";\nimport TodoInputs from \"./TodoInputs\";\n\nconst TodoList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n\n  const getAllTasks = () => {\n    TaskApiService.find().then(res => {\n      setTasks(res.data.data);\n    }).catch(err => {\n      alert(\"Failed, Please Try Again\");\n    });\n  };\n\n  if (tasks && tasks.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TodoInputs, {\n        getAllTasks: getAllTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-8\",\n        children: tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(TodoItem, {\n            task: task,\n            getAllTasks: getAllTasks\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"You Have No Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(TodoList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mohamed/Desktop/to-do-app-front/src/components/TodoList.js"],"names":["React","useEffect","useState","TodoItem","TaskApiService","TodoInputs","TodoList","tasks","setTasks","getAllTasks","find","then","res","data","catch","err","alert","length","map","task","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,MAAM;AACxBL,IAAAA,cAAc,CAACM,IAAf,GACKC,IADL,CACUC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAR;AACD,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACZC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,KANL;AAOD,GARD;;AAUA,MAAIT,KAAK,IAAIA,KAAK,CAACU,MAAN,KAAiB,CAA9B,EAAiC;AAC7B,wBACI;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,WAAW,EAAER;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACKF,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAU;AACjB,8BAAO,QAAC,QAAD;AAAyB,YAAA,IAAI,EAAEA,IAA/B;AAAqC,YAAA,WAAW,EAAEV;AAAlD,aAAeU,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAWO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAhCD;;GAAMd,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport TaskApiService from \"../services/taskApiService\";\nimport TodoInputs from \"./TodoInputs\";\n\nconst TodoList = () => {\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n\n  const getAllTasks = () => {\n    TaskApiService.find()\n        .then(res => {\n          setTasks(res.data.data);\n        })\n        .catch(err => {\n          alert(\"Failed, Please Try Again\")\n        })\n  }\n\n  if (tasks && tasks.length !== 0) {\n      return (\n          <div>\n              <TodoInputs getAllTasks={getAllTasks} />\n              <div className=\"my-8\">\n                  {tasks.map((task) => {\n                      return <TodoItem key={task._id} task={task} getAllTasks={getAllTasks} />;\n                  })}\n              </div>\n          </div>\n      );\n  } else {\n    return <h3>You Have No Tasks</h3>;\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}