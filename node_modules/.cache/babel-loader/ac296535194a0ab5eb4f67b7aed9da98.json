{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mohamed/Desktop/to-do-app-front/src/components/TodoInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport taskApiService from \"../services/taskApiService\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nconst TodoInputs = ({\n  getAllTasks\n}) => {\n  _s();\n\n  const [name, setName] = useState();\n\n  const saveTask = task => {\n    var _task$description;\n\n    console.log(task);\n\n    if ((task === null || task === void 0 ? void 0 : (_task$description = task.description) === null || _task$description === void 0 ? void 0 : _task$description.length) === 0) {\n      NotificationManager.warning(\"You wrote nothing :/ \");\n    } else {\n      taskApiService.save(task).then(() => {\n        getAllTasks();\n      }).catch(err => {\n        alert(\"Failed, Please Try Again\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setName(e.target.value),\n        value: name,\n        type: \"text\",\n        className: \"col form-control\",\n        placeholder: \"Add a Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: () => {\n          saveTask({\n            description: name\n          });\n          setName(\"\");\n        },\n        children: \"ADD NEW TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoInputs, \"rJJt6LMoD8omQ3rgJoOroBgQXzE=\");\n\n_c = TodoInputs;\nexport default TodoInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInputs\");","map":{"version":3,"sources":["/home/mohamed/Desktop/to-do-app-front/src/components/TodoInputs.js"],"names":["React","useState","taskApiService","NotificationContainer","NotificationManager","TodoInputs","getAllTasks","name","setName","saveTask","task","console","log","description","length","warning","save","then","catch","err","alert","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;;AAEA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AAAA;;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAG,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,iCAAAA,IAAI,CAAEG,WAAN,wEAAmBC,MAAnB,MAA8B,CAAjC,EAAoC;AAChCV,MAAAA,mBAAmB,CAACW,OAApB,CAA4B,uBAA5B;AACH,KAFD,MAEO;AACHb,MAAAA,cAAc,CAACc,IAAf,CAAoBN,IAApB,EACKO,IADL,CACU,MAAM;AACRX,QAAAA,WAAW;AACd,OAHL,EAIKY,KAJL,CAIWC,GAAG,IAAI;AACVC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,OANL;AAOH;AACJ,GAbD;;AAeA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AACI,QAAA,QAAQ,EAAGC,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAD5B;AAEI,QAAA,KAAK,EAAEhB,IAFX;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,SAAS,EAAC,kBAJd;AAKI,QAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACXE,UAAAA,QAAQ,CAAC;AAACI,YAAAA,WAAW,EAAEN;AAAd,WAAD,CAAR;AACAC,UAAAA,OAAO,CAAC,EAAD,CAAP;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAxCD;;GAAMH,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\nimport taskApiService from \"../services/taskApiService\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nconst TodoInputs = ({getAllTasks}) => {\n    const [name, setName] = useState();\n\n    const saveTask = (task) => {\n        console.log(task)\n        if(task?.description?.length === 0) {\n            NotificationManager.warning(\"You wrote nothing :/ \")\n        } else {\n            taskApiService.save(task)\n                .then(() => {\n                    getAllTasks();\n                })\n                .catch(err => {\n                    alert(\"Failed, Please Try Again\")\n                })\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row m-2\">\n                <input\n                    onChange={(e) => setName(e.target.value)}\n                    value={name}\n                    type=\"text\"\n                    className=\"col form-control\"\n                    placeholder=\"Add a Task\"\n                />\n                <button\n                    className=\"btn btn-primary mx-2\"\n                    onClick={() => {\n                        saveTask({description: name})\n                        setName(\"\");\n                    }}\n                >\n                    ADD NEW TASK\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default TodoInputs;\n"]},"metadata":{},"sourceType":"module"}